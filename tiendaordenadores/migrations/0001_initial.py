# Generated by Django 5.1.2 on 2024-10-20 21:11

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DiscoDuroHdd',
            fields=[
                ('id_hdd', models.AutoField(primary_key=True, serialize=False)),
                ('rpm', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pulgadas', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DiscoDuroNvme',
            fields=[
                ('id_nvme', models.AutoField(primary_key=True, serialize=False)),
                ('amperaje', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='DiscoDuroSsd',
            fields=[
                ('id_ssd', models.AutoField(primary_key=True, serialize=False)),
                ('amperaje', models.TextField(max_length=20)),
                ('capacidad', models.CharField(max_length=20)),
                ('peso', models.CharField(max_length=10)),
                ('tiempomediofallos', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Disipador',
            fields=[
                ('id_disipador', models.AutoField(primary_key=True, serialize=False)),
                ('vidautil', models.CharField(max_length=20)),
                ('socket', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=20)),
                ('voltaje', models.CharField(max_length=10)),
                ('dimensiones', models.CharField(max_length=10)),
                ('fechacreacion', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='FuenteAlimentacion',
            fields=[
                ('id_fuente', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('vatios', models.TextField(max_length=4)),
                ('amperaje', models.FloatField(max_length=20)),
                ('conectoresdisponibles', models.TextField(max_length=100)),
                ('calidadfuente', models.TextField(choices=[('80Bronce', '80Bronce'), ('80Silver', '80Silver'), ('80Gold', '80Gold'), ('80Plat', '80Plat'), ('80Titanium', '80Titanium')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Grafica',
            fields=[
                ('id_grafica', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiagrafica', models.TextField(choices=[('AMD', 'AMD'), ('Nvidia', 'NVIDIA'), ('Intel', 'Intel')], max_length=6)),
                ('potenciacalculo', models.CharField(max_length=30)),
                ('memoriavram', models.CharField(max_length=10)),
                ('fecha_salida', models.DateTimeField(default=django.utils.timezone.now)),
                ('trazadorayos', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id_monitor', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('hz', models.TextField(max_length=4)),
                ('calidad_respuesta', models.DecimalField(decimal_places=5, max_digits=10)),
                ('curvo', models.BooleanField(default=False)),
                ('pantallafiltroplasma', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Procesador',
            fields=[
                ('id_procesador', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiaprocesador', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=6)),
                ('potenciacalculo', models.CharField(max_length=30)),
                ('nucleos', models.IntegerField()),
                ('hilos', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id_ram', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_fabricacion', models.DateField(default=django.utils.timezone.now)),
                ('mhz', models.CharField(max_length=10)),
                ('familiaram', models.TextField(choices=[('DDR3', 'Formato DDR3'), ('DDR4', 'Formato DDR4'), ('DDR5', 'FOrmato DDR5')])),
                ('rgb', models.BooleanField(default=True)),
                ('factormemoria', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlacaBase',
            fields=[
                ('id_placabase', models.AutoField(primary_key=True, serialize=False)),
                ('urlcompra', models.URLField(max_length=100)),
                ('nombre', models.TextField(max_length=100)),
                ('familiaplacabase', models.TextField(choices=[('Ryzen', 'Ryzen'), ('Intel', 'Intel')], max_length=10)),
                ('vrm_placa', models.FloatField(max_length=10)),
                ('rgb', models.BooleanField(default=False)),
                ('hdds', models.ManyToManyField(related_name='placabas_hdds', to='tiendaordenadores.discodurohdd')),
                ('monitores', models.ManyToManyField(related_name='placabas_monitores', to='tiendaordenadores.monitor')),
                ('rams', models.ManyToManyField(related_name='placabas_rams', to='tiendaordenadores.ram')),
            ],
        ),
        migrations.CreateModel(
            name='MonitorGrafica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grafica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.grafica')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.monitor')),
            ],
            options={
                'unique_together': {('monitor', 'grafica')},
            },
        ),
        migrations.CreateModel(
            name='PlacaBaseDisipador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disipador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.disipador')),
                ('placabase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.placabase')),
            ],
            options={
                'unique_together': {('placabase', 'disipador')},
            },
        ),
        migrations.CreateModel(
            name='GraficaProcesador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuellodebotella', models.BooleanField(default=False)),
                ('grafica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.grafica')),
                ('procesador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tiendaordenadores.procesador')),
            ],
            options={
                'unique_together': {('grafica', 'procesador')},
            },
        ),
    ]
